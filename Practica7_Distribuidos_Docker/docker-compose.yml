version: '3.8'

services:
  patients-service:
    build: ./patients-service
    ports:
      - "5000:5000" # Puerto del servicio de pacientes
    volumes:
      - medical_data:/app/data # Montar volumen para datos, incluida la DB
    environment:
      - DATABASE_URL=/app/data/medical_agenda.db # Ruta donde la DB se almacenará dentro del contenedor
    # Dependencias si un servicio debe arrancar después de otro (ej. si hubiera una DB externa)
    # depends_on:
    #   - db # Si tuviéramos un servicio de DB separado

  doctors-service:
    build: ./doctors-service
    ports:
      - "5001:5000" # Mapear al puerto 5001 en el host, pero Flask escucha en 5000 dentro del contenedor
    volumes:
      - medical_data:/app/data
    environment:
      - DATABASE_URL=/app/data/medical_agenda.db

  appointments-service:
    build: ./appointments-service
    ports:
      - "5002:5000" # Mapear al puerto 5002 en el host
    volumes:
      - medical_data:/app/data
    environment:
      - DATABASE_URL=/app/data/medical_agenda.db

volumes:
  medical_data: # Definir un volumen con nombre para compartir datos